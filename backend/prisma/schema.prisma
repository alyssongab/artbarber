// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  ADMIN
  BARBER
}

model User {
  user_id                   Int               @id @default(autoincrement())
  first_name                String
  last_name                 String?
  email                     String            @unique
  password                  String
  phone_number              String
  birthday                  DateTime?         @db.Date
  cpf                       String?           @unique
  role                      Role              @default(CLIENT)
  photo_url                 String?           
  appointmentsAsBarber      Appointment[]     @relation("BarberAppointments")
  appointmentsAsClient      Appointment[]     @relation("ClientAppointments")
}
model Service {
  service_id      Int       @id @default(autoincrement())
  name            String    
  price           Decimal
  duration        Int
  appointments    Appointment[]
}

model Appointment {
  appointment_id    Int         @id @default(autoincrement())
  appointment_date  DateTime    @db.Date
  appointment_time  DateTime    @db.Time

  id_barber         Int
  barber            User        @relation("BarberAppointments", fields: [id_barber], references: [user_id])
  
  // client id may be null because they might show up in person without previus signup
  id_client         Int?
  client            User?        @relation("ClientAppointments", fields: [id_client], references: [user_id])

  id_service        Int
  service           Service     @relation(fields: [id_service], references: [service_id])
}
